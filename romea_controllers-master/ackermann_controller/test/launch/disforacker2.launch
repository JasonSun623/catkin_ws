<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find ackermann_controller)/test/urdf/ackermann.urdf.xacro" />
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
   <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
    <arg name="world_name" value="$(find robot1_gazebo)/worlds/robot.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg model)'" />
  <!-- joint controller in rviz -->
  <param name="use_gui" value="$(arg gui)"/>
  <!-- robot controller conf file in gazebo  -->
  <rosparam command="load" file="$(find ackermann_controller)/test/config/ackermann_controllers.yaml"/>
  <node name="R2D2Controller" pkg="controller_manager" type="spawner" output="screen" args="robot_joint_publisher ackermann_controller --shutdown-timeout 3" />
  <!-- robot link / joint  TF publisher  -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <!-- Run RVIZ -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find urdf_tutorial)/urdf.rviz" />
 
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	   args="-urdf -model robot1 -param robot_description -z 0.05"/> 
   <!-- diff wheel controller in gazebo -->
   <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/ackermann_controller/cmd_vel"/>
   </node>
   
</launch>
