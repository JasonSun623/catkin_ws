<?xml version="1.0"?>
<robot name="R2D2_base" xmlns:xacro="http://ros.org/wiki/xacro">
<material name="blue">
  <color rgba="0 0 0.8 1"/>
</material>

<material name="black">
  <color rgba="0 0 0 1"/>
</material>

<material name="white">
  <color rgba="1 1 1 1"/>
</material>

<xacro:property name="package_name" value="imu_odom_combine" />


<!-- the vertical offset dist bet the car and the ground -->
<xacro:property name="up_z" value="0.5" />
<!-- the vertical offset dist bet the laser and car body -->
<xacro:property name="up_laser" value="0.1" />
<!-- the vertical offset dist bet the driving wheel and car body -->
<xacro:property name="down_wheel" value="0.35" />
<!-- the horizontal offset dist bet the driven wheel and car body -->
<xacro:property name="offset_wheel" value="0.5" />
<!-- the horizontal offset dist bet the laser and car body -->
<xacro:property name="offset_laser" value="0.4" />
<!-- !!!
  the wheel_separation and  wheel_radius  used for diff_wheel_controller(ros wheel_diff_controller will read them !! ) and urdf
  if we do not specify it in urdf or yaml conf file ,the odo data published  by diffed controller will get be wrong
!!!!-->

<!-- dist bet left and right wheel -->
<xacro:property name="wheel_separation" value="1.0" />
<xacro:property name="wheel_radius" value="0.15" />

<xacro:property name="car_body_length" value="1" />
<xacro:property name="car_body_width" value="0.8" />
<xacro:property name="car_body_height" value="0.1" />

  <xacro:property name="imu_stdev" value="0.00017" />


  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

<link name="base_footprint">
</link>
  
<link name="base_link">
    <visual>
      <geometry>
         <box size="${car_body_length} ${car_body_width} ${car_body_height}"/>
      </geometry>
     <origin xyz="0 0 ${up_z}" rpy="0 0 0"/>
     <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${car_body_length} ${car_body_width} ${car_body_height}"/>
      </geometry>
     <origin xyz="0 0 ${up_z}" rpy="0 0 0"/>
    </collision>
    <xacro:default_inertial mass="50"/>
  </link>



  <link name="left_front_wheel">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
    </collision>
    <xacro:default_inertial mass="1"/>
  </link>


<link name="right_front_wheel">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
    </collision>
    <xacro:default_inertial mass="1"/>
  </link>

<link name="front_wheel">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
    </collision>
    <xacro:default_inertial mass="0.01"/>
  </link>

<link name="rear_wheel">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.1" radius="${wheel_radius}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
    </collision>
    <xacro:default_inertial mass="0.01"/>
  </link>

  <!-- published int launch file -->
  <!-- if published in here the tf time will too fast than other link ,it will display error in rviz-->
  <joint name="base_footprint_to_base_link" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 0.5" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <joint name="left_front_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_front_wheel"/>
    <origin xyz="-0.0 ${wheel_separation/2} ${up_z-down_wheel}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <joint name="right_front_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_front_wheel"/>
    <origin xyz="-0.0 ${-wheel_separation/2} ${up_z-down_wheel}" rpy="0 0 0" />
    <axis xyz="0 1 0"/>
  </joint>

 
  <joint name="front_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_wheel"/>
    <origin xyz="${offset_wheel} 0 ${up_z-down_wheel}" rpy="0 0 0" />
    <axis xyz="0 1 0"/>
  </joint>

 
  <joint name="rear_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_wheel"/>
    <origin xyz="${-offset_wheel} 0 ${up_z-down_wheel}" rpy="0 0 0" />
    <axis xyz="0 1 0"/>
  </joint>
  <!--                   !!!scan!!!                                   -->
  <xacro:include filename="$(find ${package_name})/urdf/hokuyolaser_base.xacro" />
  <xacro:hokuyolaser parent_link="base_link">
    <origin xyz="0 0 ${up_z+up_laser}" rpy="0 0 0" />
  </xacro:hokuyolaser>
 <!--                     !!!imu!!!                                  -->
  <xacro:include filename="$(find ${package_name})/urdf/imu.gazebo.urdf.xacro" />
  <xacro:imu_gazebo parent_link="base_link" link="imu_link" imu_topic="imu_data" update_rate="50.0" stdev="${imu_stdev}" > 
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_gazebo>

<transmission name="left_front_wheel_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="$left_front_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="left_front_wheel_joint">
   <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
</transmission>

<transmission name="right_front_wheel_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="$right_front_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="right_front_wheel_joint">
   <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
</transmission>

<transmission name="front_wheel_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="$front_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="front_wheel_joint">
   <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
</transmission>

<transmission name="rear_wheel_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="$rear_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="rear_wheel_joint">
   <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
</transmission>
<!--transmission name="front_wheel_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="$front_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="front_wheel_joint">
   <hardwareInterface>PositionJointInterface</hardwareInterface>
  </joint>
</transmission-->

<!--gazebo>                                                       
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <robotNamespace>/</robotNamespace>
    <alwaysOn>true</alwaysOn>
    <updateRate>50</updateRate>
    <leftJoint>left_front_wheel_joint</leftJoint>
    <rightJoint>right_front_wheel_joint</rightJoint>
    <wheelSeparation>${wheel_separation}</wheelSeparation>
    <wheelDiameter>${2*wheel_radius}</wheelDiameter>
    <torque>20</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
  </plugin>
</gazebo-->


<!--xacro:macro name="diff_controller_plugin_gazebo" params="prefix left_wheel_joint right_wheel_joint wheel_separation wheel_radius">
  <gazebo>
    <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <leftJoint>${left_wheel_joint}</leftJoint>
      <rightJoint>${right_wheel_joint}</rightJoint>
      <wheelSeparation>${wheel_separation}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <wheelTorque>10</wheelTorque>
      <publishTf>1</publishTf>
      <odometryFrame>map</odometryFrame>
      <commandTopic>mobile_base_controller/cmd_vel</commandTopic>
      <odometryTopic>mobile_base_controller/odom</odometryTopic>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <wheelAcceleration>2.8</wheelAcceleration>
      <publishWheelJointState>true</publishWheelJointState>
      <publishWheelTF>false</publishWheelTF>
      <odometrySource>world</odometrySource>
      <rosDebugLevel>Debug</rosDebugLevel>
    </plugin>
  </gazebo>
</xacro:macro-->


 <gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
  <robotNamespace>/</robotNamespace>
  </plugin>
</gazebo>


</robot>
